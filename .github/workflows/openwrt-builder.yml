#
# Copyright (C) 2024 nosignals
# Copyright (C) 2024 BobbyUnknown

name: ULO Autobuilder

on:
  workflow_dispatch:
    inputs:
      devices:
        description: "Devices"
        required: true
        default: "s905x"
        type: choice
        options:
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588-orangepi-5plus
          - rk3588s-orangepi-5
      version:
        description: "OpenWrt Version"
        required: true
        default: "23.05.5"
        type: choice
        options:
          - "24.10.0"
          - "23.05.5"
          - "23.05.4"
          - "23.05.3"
          - "23.05.2"
          - "23.05.1"
          - "23.05.0"

jobs: 
  build_ipk:
    permissions:
      contents: write
    name: ULO Autobuilder
    runs-on: ubuntu-22.04
    steps:
      
      - name: Cleanup and Installing Prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E apt-get update
          sudo -E apt-get -y install lolcat build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
          python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget pigz aria2
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
                    
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Setup Configuration
        run: |
          # Menentukan kernel berdasarkan device yang dipilih
          KERNEL=""
          case "${{ inputs.devices }}" in
            h5-*|h616-*|h618-*|h6-*)
              KERNEL="6.6.6-AW64-DBAI"
              ;;
            rk*)
              KERNEL="5.10.160-rk35v-dbai"
              ;;
            s905*)
              KERNEL="6.1.66-DBAI"
              ;;
            *)
              echo "Error: Kernel not found for device: ${{ inputs.devices }}"
              exit 1
              ;;
          esac
          
          # Menyimpan konfigurasi ke file
          echo "DEVICE=${{ inputs.devices }}" > config
          echo "KERNEL=$KERNEL" >> config
          echo "ROOTFS_SIZE=1024" >> config
          echo "VERSION=${{ inputs.version }}" >> config
          
          # Menampilkan konfigurasi yang dipilih
          echo -e "\nSelected Configuration:"
          echo "Device: ${{ inputs.devices }}"
          echo "Kernel: $KERNEL"
          echo "Rootfs Size: 1024M"
          echo "OpenWrt Version: ${{ inputs.version }}"
          
      - name: Building OpenWrt
        run: |
          chmod +x build
          chmod +x image-builder
          chmod +x ulo-builder
          echo -e "2\n4" | ./build
          
      - name: Creating Package Artifact
        run: |
          mkdir -p ./artifact
          cp -rf ./ULO-Builder/out/${{ inputs.devices }}/* ./artifact/
          
      - name: Delivering Package
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_package
          path: ./artifact/*

      - name: Set Kernel Version
        run: |
          echo "KERNEL_VERSION=$(grep "KERNEL=" config | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*
          tag: ${{ inputs.devices }}
          file_glob: true
          overwrite: true
          body: |
            ##  OpenWRT Release for ${{ inputs.devices }} devices
            ULO-Builder Release from Github Workflow
            ### OpenWrt Image Information
            - Devices type : ${{ inputs.devices }}
            - Kernel version : ${{ env.KERNEL_VERSION }}
            - ROOTFS Size : 1024M+
